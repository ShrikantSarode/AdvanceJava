package example.spring.mvc.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;

import example.spring.mvc.model.User;
import example.spring.mvc.model.UserValidator;

@Controller
@SessionAttributes({ "loggedInUser" })
public class SpringMvcController {
	@GetMapping("/doGreet")
	public String getHomePage() {
		System.out.println("Inside getHomePage()");
		return "home";
	}

	// @RequestMapping("/doLogin")
	@GetMapping("/addTeam")
	public String getLoginPage() {
		System.out.println("Inside getLoginPage()");
		return "login";
	}

	// @RequestMapping(value = "/doValidate", method = RequestMethod.POST)
	@PostMapping("/doValidate")
	public String getResultPage(@RequestParam("uid") String userName, @RequestParam("pwd") String password) {
		// This method returns one of the 2 possinle result pages : success/failure
		System.out.println("Inside getResultPage()");
		String resultPage = "failure";
		// Building a Model object : User based upon userName and password
		User userDataModel = new User(userName, password);
		// Passing the Model object to UserValidation for validation
		boolean valid = UserValidator.isValid(userDataModel);
		if (valid)
			resultPage = "success";
		return resultPage;
	}

	// @RequestMapping(value = "/doValidateAgain", method = RequestMethod.POST)
	@PostMapping("/doValidateAgain")
	public String getResultPageAgain(@RequestParam("uid") String userName, @RequestParam("pwd") String password,
			Model modelObject) {
		String resultPage = "failurePage";
		User userDataModel = new User(userName, password);
		// Passing the Model object to UserValidation for validation
		boolean valid = UserValidator.isValid(userDataModel);
		if (valid) {
			resultPage = "successPage";
			// Adding a userName in the Model object
			modelObject.addAttribute("loggedInUser", userName);
		}
		return resultPage;
	}
}
